{"version":3,"sources":["utils/actions.js","utils/reducers.js","utils/GlobalState.js","utils/helpers.js","utils/mutations.js","components/Item/index.js","utils/queries.js","components/ItemList/index.js","components/Menu/index.js","pages/Home.js","pages/Profile.js","utils/auth.js","pages/Login.js","pages/Signup.js","components/CartItem/index.js","components/Cart/index.js","components/Nav/index.js","components/Footer/index.js","pages/ItemDetails.js","App.js","index.js"],"names":["UPDATE_ITEMS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","reducer","state","action","type","items","cartOpen","cart","item","map","_id","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","LOGIN","gql","ADD_USER","UPDATE_ITEM","Item","name","image","price","thumbsUp","thumbsDown","useMutation","updateItem","addThumbsUp","variables","id","addThumbsDown","className","to","alt","onClick","itemInCart","find","cartItem","parseInt","QUERY_ITEMS","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","ProductList","useQuery","loading","data","useEffect","forEach","then","category","Menu","categoryData","target","Home","ItemList","Profile","user","firstName","lastName","orders","order","Date","purchaseDate","toLocaleDateString","index","decode","this","getToken","token","isTokenExpired","exp","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","Login","useState","email","password","formState","setFormState","login","error","handleFormSubmit","event","preventDefault","mutationResponse","Auth","handleChange","onSubmit","htmlFor","placeholder","onChange","Signup","addUser","CartItem","src","role","removeFromCart","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","getCart","sum","toFixed","calculateTotal","loggedIn","productIds","i","push","Nav","href","logout","Footer","getFullYear","Detail","useParams","currentItem","setCurrentItem","indexedProducts","description","disabled","p","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","ItemDetails","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b63e67f6.chunk.js","sourcesContent":["export const UPDATE_ITEMS = \"UPDATE_ITEMS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n\n","import { useReducer } from \"react\";\nimport {\n    UPDATE_ITEMS,\n    ADD_TO_CART,\n    UPDATE_CART_QUANTITY,\n    REMOVE_FROM_CART,\n    ADD_MULTIPLE_TO_CART,\n    UPDATE_CATEGORIES,\n    UPDATE_CURRENT_CATEGORY,\n    CLEAR_CART,\n    TOGGLE_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n    switch (action.type) {\n        case UPDATE_ITEMS:\n            return {\n                ...state,\n                items: [...action.items],\n            };\n\n        case ADD_TO_CART:\n            return {\n                ...state,\n                cartOpen: true,\n                cart: [...state.cart, action.item],\n            };\n\n        case ADD_MULTIPLE_TO_CART:\n            return {\n                ...state,\n                cart: [...state.cart, ...action.items],\n            };\n\n        case UPDATE_CART_QUANTITY:\n            return {\n                ...state,\n                cartOpen: true,\n                cart: state.cart.map(item => {\n                    if (action._id === item._id) {\n                        item.purchaseQuantity = action.purchaseQuantity\n                    }\n                    return item\n                })\n            };\n\n        case REMOVE_FROM_CART:\n            let newState = state.cart.filter(item => {\n                return item._id !== action._id;\n            });\n\n            return {\n                ...state,\n                cartOpen: newState.length > 0,\n                cart: newState\n            };\n\n        case CLEAR_CART:\n            return {\n                ...state,\n                cartOpen: false,\n                cart: []\n            };\n\n        case TOGGLE_CART:\n            return {\n                ...state,\n                cartOpen: !state.cartOpen\n            };\n\n        case UPDATE_CATEGORIES:\n            return {\n                ...state,\n                categories: [...action.categories],\n            };\n\n        case UPDATE_CURRENT_CATEGORY:\n            return {\n                ...state,\n                currentCategory: action.currentCategory\n            }\n\n        default:\n            return state;\n    }\n};\n\nexport function useProductReducer(initialState) {\n    return useReducer(reducer, initialState)\n}\n\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n    const [state, dispatch] = useProductReducer({\n        items: [],\n        cart: [],\n        cartOpen: false,\n        categories: [],\n        currentCategory: '',\n    });\n\n    return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n    return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };","export function pluralize(name, count) {\n    if (count === 1) {\n        return name;\n    }\n    return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n    return new Promise((resolve, reject) => {\n        //open name not sure whether it is menu-app\n        const request = window.indexedDB.open('menu-app', 1);\n        let db, tx, store;\n        request.onupgradeneeded = function (e) {\n            const db = request.result;\n            db.createObjectStore('items', { keyPath: '_id' });\n            db.createObjectStore('categories', { keyPath: '_id' });\n            db.createObjectStore('cart', { keyPath: '_id' });\n        };\n\n        request.onerror = function (e) {\n            console.log('There was an error');\n        };\n\n        request.onsuccess = function (e) {\n            db = request.result;\n            tx = db.transaction(storeName, 'readwrite');\n            store = tx.objectStore(storeName);\n\n            db.onerror = function (e) {\n                console.log('error', e);\n            };\n\n            switch (method) {\n                case 'put':\n                    store.put(object);\n                    resolve(object);\n                    break;\n                case 'get':\n                    const all = store.getAll();\n                    all.onsuccess = function () {\n                        resolve(all.result);\n                    };\n                    break;\n                case 'delete':\n                    store.delete(object._id);\n                    break;\n                default:\n                    console.log('No valid method');\n                    break;\n            }\n\n            tx.oncomplete = function () {\n                db.close();\n            };\n        };\n    });\n}\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($items: [ID]!) {\n    addOrder(items: $items) {\n      purchaseDate\n      items {\n        _id\n        name\n        description\n        price\n      \n        category {\n          name\n        }\n        rating{\n            thumbsUp\n            thumbsDown\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }  \n`;\n\nexport const UPDATE_ITEM = gql`\nmutation updateItem($thumbsUp: Float, $thumbsDown: Float, $id: ID) {\n  updateItem(thumbsUp: $thumbsUp, thumbsDown: $thumbsDown, _id: $id) {\n    thumbsUp\n    thumbsDown\n  }\n}\n`;","import { Link } from \"react-router-dom\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { useMutation } from '@apollo/client';\nimport { UPDATE_ITEM } from '../../utils/mutations';\nimport React, { useEffect } from 'react';\n\nfunction Item(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    thumbsUp,\n    thumbsDown,\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        item: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n  \n  const [updateItem] = useMutation(UPDATE_ITEM);\n  const addThumbsUp = async () => {\n    const mutationResponse = await updateItem({\n      variables: {\n        id: _id,\n        thumbsUp: thumbsUp + 1,\n      },\n    });\n  }\n\n  const addThumbsDown = async () => {\n    const mutationResponse = await updateItem({\n      variables: {\n        id: _id,\n        thumbsDown: thumbsDown + 1,\n      },\n    });\n  }\n\n  // const addThumbsUp = () => {\n  //   thumbsUp.value += thumbsUp.value\n  // }\n\n  // const addThumbsDown = () => {\n  //   thumbsDown.value += thumbsDown.value\n  // }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/items/${_id}`}>\n        <img\n          alt={name}\n        // src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      {/* <div onClick={addThumbsUp}>\n        <span\n          role=\"img\"\n          aria-label=\"thumbsUp\"\n        >\n          👍🏻\n        </span>\n      </div>\n      <div onClick={addThumbsDown}>\n        <span>{thumbsUp}</span>\n        <span\n          role=\"img\"\n          aria-label=\"thumbsDown\"\n        >\n          👎🏻\n        </span>\n        <span>{thumbsDown}</span>\n      </div> */}\n      <div>\n        <span>${price}</span>\n      </div>\n        <p onClick={addThumbsUp}>👍 {thumbsUp}</p>\n        <p onClick={addThumbsDown}>👎 {thumbsDown}</p>\n      <div>\n      </div>\n      \n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default Item;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_ITEMS = gql`\n  query getItems($category: ID) {\n    items(category: $category) {\n      _id\n      name\n      description\n      price\n      image\n      category {\n        _id\n      }\n      thumbsUp\n      thumbsDown\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($items: [ID]!) {\n    checkout(items: $items) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_ITEMS = gql`\n  {\n    items {\n      _id\n      name\n      description\n      price\n    \n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        items {\n          _id\n          name\n          description\n          price\n          image\n        }\n      }\n    }\n  }\n`;\n","import React, { useEffect } from 'react';\nimport Item from '../Item';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_ITEMS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_ITEMS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_ITEMS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_ITEMS,\n        items: data.items,\n      });\n      data.items.forEach((item) => {\n        idbPromise('items', 'put', item);\n      });\n    } else if (!loading) {\n      idbPromise('items', 'get').then((items) => {\n        dispatch({\n          type: UPDATE_ITEMS,\n          items: items,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterItems() {\n    if (!currentCategory) {\n      return state.items;\n    }\n\n    return state.items.filter(\n      (item) => item.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Items:</h2>\n      {state.items.length ? (\n        <div className=\"flex-row\">\n          {filterItems().map((item) => (\n            <Item\n              key={item._id}\n              _id={item._id}\n              image={item.image}\n              name={item.name}\n              price={item.price}\n              thumbsUp={item.thumbsUp}\n              thumbsDown={item.thumbsDown}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any items yet!</h3>\n      )}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction Menu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n        <div>Choose a Menu</div>\n        <select onClick={(e) => handleClick(e.target.value)}>\n        {categories.map((item) => (\n            <option\n            key={item._id}\n            value={item._id}\n            >\n            {item.name}\n            </option>\n            ))}\n        </select>\n    </div>\n  );\n}\n\nexport default Menu;\n","import React from \"react\";\nimport ItemList from \"../components/ItemList\";\nimport Menu from \"../components/Menu\";\n\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <Menu />\n      <ItemList />      \n    </div>\n  );\n};\n\nexport default Home;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction Profile() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div>\n        <Link to=\"/\">← Back to Items</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.items.map(({ _id, image, name, price }, index) => (\n                    <div key={index}>\n                      <Link to={`/items/${_id}`}>\n                        <img alt={name} \n                        // src={`/images/${image}`} \n                        />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default Profile;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n    getProfile() {\n        return decode(this.getToken());\n    }\n\n    loggedIn() {\n        // Checks if there is a saved token and it's still valid\n        const token = this.getToken();\n        return !!token && !this.isTokenExpired(token);\n    }\n\n    isTokenExpired(token) {\n        try {\n            const decoded = decode(token);\n            if (decoded.exp < Date.now() / 1000) {\n                return true;\n            } else return false;\n        } catch (err) {\n            return false;\n        }\n    }\n\n    getToken() {\n        // Retrieves the user token from localStorage\n        return localStorage.getItem('id_token');\n    }\n\n    login(idToken) {\n        // Saves user token to localStorage\n        localStorage.setItem('id_token', idToken);\n\n        window.location.assign('/');\n    }\n\n    logout() {\n        // Clear user token and profile data from localStorage\n        localStorage.removeItem('id_token');\n        // this will reload the page and reset the state of the application\n        window.location.assign('/');\n    }\n}\n\nexport default new AuthService();","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login() {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div>\n      <Link to=\"/signup\">← Go to Signup</Link>\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div>\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@email.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"********\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div>\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup() {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div>\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@email.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"********\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n    const [, dispatch] = useStoreContext();\n\n    const removeFromCart = item => {\n        dispatch({\n            type: REMOVE_FROM_CART,\n            _id: item._id\n        });\n        idbPromise('cart', 'delete', { ...item });\n\n    };\n\n    const onChange = (e) => {\n        const value = e.target.value;\n        if (value === '0') {\n            dispatch({\n                type: REMOVE_FROM_CART,\n                _id: item._id\n            });\n            idbPromise('cart', 'delete', { ...item });\n\n        } else {\n            dispatch({\n                type: UPDATE_CART_QUANTITY,\n                _id: item._id,\n                purchaseQuantity: parseInt(value)\n            });\n            idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n        }\n    }\n\n    return (\n        <div className=\"flex-row\">\n            <div>\n                <img\n                    src={`/images/${item.image}`}\n                    alt=\"\"\n                />\n            </div>\n            <div>\n                <div>{item.name}, ${item.price}</div>\n                <div>\n                    <span>Qty:</span>\n                    <input\n                        type=\"number\"\n                        placeholder=\"1\"\n                        value={item.purchaseQuantity}\n                        onChange={onChange}\n                    />\n                    <span\n                        role=\"img\"\n                        aria-label=\"trash\"\n                        onClick={() => removeFromCart(item)}\n                    >\n                        🗑️\n                    </span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CartItem;\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\n\n// stripePromise returns a promise with the stripe object as soon as the Stripe package loads\nconst stripePromise = loadStripe('pk_test_51LReexIhTfAGHhtGiPY0YGTFCdwIf70vlq9AEaI8YEXLs3dIfGGJ5BP9mdX7bpjrwYqfjD70TRIxxIKLW3DFKtem00WdammY7S');\n\nconst Cart = () => {\n    const [state, dispatch] = useStoreContext();\n    const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n    // We check to see if there is a data object that exists, if so this means that a checkout session was returned from the backend\n    // Then we should redirect to the checkout with a reference to our session id\n    useEffect(() => {\n        if (data) {\n            stripePromise.then((res) => {\n                res.redirectToCheckout({ sessionId: data.checkout.session });\n            });\n        }\n    }, [data]);\n\n    // If the cart's length or if the dispatch function is updated, check to see if the cart is empty.\n    // If so, invoke the getCart method and populate the cart with the existing from the session\n    useEffect(() => {\n        async function getCart() {\n            const cart = await idbPromise('cart', 'get');\n            dispatch({ type: ADD_MULTIPLE_TO_CART, items: [...cart] });\n        }\n\n        if (!state.cart.length) {\n            getCart();\n        }\n    }, [state.cart.length, dispatch]);\n\n    function toggleCart() {\n        dispatch({ type: TOGGLE_CART });\n    }\n\n    function calculateTotal() {\n        let sum = 0;\n        state.cart.forEach((item) => {\n            sum += item.price * item.purchaseQuantity;\n        });\n        return sum.toFixed(2);\n    }\n\n    // When the submit checkout method is invoked, loop through each item in the cart\n    // Add each item id to the productIds array and then invoke the getCheckout query passing an object containing the id for all our items\n    function submitCheckout() {\n        const productIds = [];\n\n        state.cart.forEach((item) => {\n            for (let i = 0; i < item.purchaseQuantity; i++) {\n                productIds.push(item._id);\n            }\n        });\n\n        getCheckout({\n            variables: { items: productIds },\n        });\n        console.log(productIds)\n    }\n\n    if (!state.cartOpen) {\n        return (\n            <div className=\"cart-closed\" onClick={toggleCart}>\n                <span role=\"img\" aria-label=\"trash\">\n                    🛒\n                </span>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"cart\">\n            <div className=\"close\" onClick={toggleCart}>\n                [close]\n            </div>\n            <h2>Shopping Cart</h2>\n            {state.cart.length ? (\n                <div>\n                    {state.cart.map((item) => (\n                        <CartItem key={item._id} item={item} />\n                    ))}\n\n                    <div className=\"flex-row space-between\">\n                        <strong>Total: ${calculateTotal()}</strong>\n\n                        {/* Check to see if the user is logged in. If so render a button to check out */}\n                        {Auth.loggedIn() ? (\n                            <button onClick={submitCheckout}>Checkout</button>\n                        ) : (\n                            <span>(log in to check out)</span>\n                        )}\n                    </div>\n                </div>\n            ) : (\n                <h3>\n                    <span role=\"img\" aria-label=\"shocked\">\n                        😱\n                    </span>\n                    You haven't added anything to your cart yet!\n                </h3>\n            )}\n        </div>\n    );\n};\n\nexport default Cart;\n","import Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport Cart from \"../Cart\";\n\nfunction Nav() {\n  function showNavigation() {\n\n\n    if (Auth.loggedIn()) {\n      return (\n        <ul>\n          <li>\n            <Link to=\"/Profile\">\n              Profile\n            </Link>\n          </li>\n          <li>\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n          <li>\n            <Cart />\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul>\n          <li>\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n          <li>\n            <Cart />\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          Menu-app\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\n// import { Card } from 'react-bootstrap';\n\n\nfunction Footer(props) {\n  return (\n\n    // <Card className=\"text-center\">\n\n      <div>\n        &copy; {new Date().getFullYear()} All Rights Reserved. Designed &amp; developed by <a href=\"https://github.com/abdallajama201\" target=\"blank\">Abdalla\n        </a>, <a href=\"https://github.com/JamesF905\" target=\"blank\">James</a>, <a href=\"https://github.com/Wingky1208\"\n          target=\"blank\">Wingky</a>\n\n      </div>\n\n    // </Card>\n\n  )\n}\n\nexport default Footer;","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_ITEMS,\n} from '../utils/actions';\nimport { QUERY_ITEMS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentItem, setCurrentItem] = useState({});\n\n  const { loading, data } = useQuery(QUERY_ITEMS);\n\n  const { items, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (items.length) {\n      setCurrentItem(items.find((item) => item._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_ITEMS,\n        items: data.items,\n      });\n\n      data.items.forEach((item) => {\n        idbPromise('items', 'put', item);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('items', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_ITEMS,\n          items: indexedProducts,\n        });\n      });\n    }\n  }, [items, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        item: { ...currentItem, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentItem, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentItem._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentItem });\n  };\n\n  return (\n    <>\n      {currentItem && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Items</Link>\n\n          <h2>{currentItem.name}</h2>\n\n          <p>{currentItem.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentItem.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentItem._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            // src={`/images/${currentItem.image}`}\n            alt={currentItem.name}\n          />\n        </div>\n      ) : null}\n\n    </>\n  );\n}\n\nexport default Detail;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Profile from './pages/Profile';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav'\nimport Footer from './components/Footer'\nimport ItemDetails from './pages/ItemDetails'\nimport { StoreProvider } from './utils/GlobalState';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n    <Router>\n      <div>\n        <StoreProvider>\n          <Nav />\n          <Routes>\n            <Route \n              path=\"/\" \n              element={<Home />} \n            />\n            <Route \n              path=\"/profile\" \n              element={<Profile />} \n            />\n            <Route \n              path=\"/login\" \n              element={<Login />} \n            />\n            <Route \n              path=\"/signup\" \n              element={<Signup />} \n            />\n            <Route \n              path=\"/items/:id\" \n              element={<ItemDetails />} \n            />\n          </Routes>\n          <Footer />\n        </StoreProvider>\n      </div>\n    </Router>\n  </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}