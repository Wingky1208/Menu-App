{"version":3,"sources":["utils/actions.js","utils/reducers.js","utils/GlobalState.js","utils/helpers.js","utils/mutations.js","components/Item/index.js","utils/queries.js","components/ItemList/index.js","components/Menu/index.js","intro_video.mp4","banner_logo.png","pages/Home.js","components/myBook/myBook.js","pages/Menu.js","pages/Profile.js","utils/auth.js","pages/Login.js","pages/Signup.js","components/CartItem/index.js","components/Cart/index.js","components/Nav/index.js","components/Footer/index.js","pages/ItemDetails.js","App.js","index.js"],"names":["UPDATE_ITEMS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","reducer","state","action","type","items","cartOpen","cart","item","map","_id","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","oncomplete","close","LOGIN","gql","ADD_USER","UPDATE_ITEM","Item","image","name","description","price","thumbsUp","thumbsDown","useState","tUp","setTUP","useMutation","updateItem","addThumbsUp","variables","id","tDown","setTDown","addThumbsDown","className","to","alt","src","onClick","itemInCart","find","cartItem","parseInt","QUERY_ITEMS","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","ProductList","useQuery","loading","data","useEffect","forEach","then","category","Menu","categoryData","target","Home","autoPlay","muted","video1","width","autoplay","loop","ItemList","MyBook","React","Component","Profile","user","firstName","lastName","orders","order","Date","purchaseDate","toLocaleDateString","index","decode","this","getToken","token","isTokenExpired","exp","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","Login","email","password","formState","setFormState","login","error","handleFormSubmit","event","preventDefault","mutationResponse","Auth","handleChange","onSubmit","htmlFor","placeholder","onChange","Signup","addUser","CartItem","role","removeFromCart","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","getCart","sum","toFixed","calculateTotal","loggedIn","productIds","i","push","Nav","href","logout","Footer","class","getFullYear","Detail","useParams","currentItem","setCurrentItem","indexedProducts","disabled","p","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","ItemDetails","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAAaA,EAAe,eAEfC,EAAc,cACdC,EAAuB,uBACvBC,EAAmB,mBAEnBC,EAAuB,uBACvBC,EAAc,cAEdC,EAAoB,oBACpBC,EAA0B,0BCG1BC,EAAU,SAACC,EAAOC,GAC3B,OAAQA,EAAOC,MACX,KAAKX,EACD,OAAO,2BACAS,GADP,IAEIG,MAAM,YAAKF,EAAOE,SAG1B,KAAKX,EACD,OAAO,2BACAQ,GADP,IAEII,UAAU,EACVC,KAAK,GAAD,mBAAML,EAAMK,MAAZ,CAAkBJ,EAAOK,SAGrC,KAAKb,EACD,OAAO,2BACAO,GADP,IAEIK,KAAK,GAAD,mBAAML,EAAMK,MAAZ,YAAqBJ,EAAOE,UAGxC,KAAKR,EACD,OAAO,2BACAK,GADP,IAEII,UAAU,EACVC,KAAML,EAAMK,KAAKE,KAAI,SAAAD,GAIjB,OAHIL,EAAOO,MAAQF,EAAKE,MACpBF,EAAKG,iBAAmBR,EAAOQ,kBAE5BH,CACV,MAGT,KAAKZ,EACD,IAAIgB,EAAWV,EAAMK,KAAKM,QAAO,SAAAL,GAC7B,OAAOA,EAAKE,MAAQP,EAAOO,GAC9B,IAED,OAAO,2BACAR,GADP,IAEII,SAAUM,EAASE,OAAS,EAC5BP,KAAMK,IAGd,IDpDkB,aCqDd,OAAO,2BACAV,GADP,IAEII,UAAU,EACVC,KAAM,KAGd,KAAKT,EACD,OAAO,2BACAI,GADP,IAEII,UAAWJ,EAAMI,WAGzB,KAAKP,EACD,OAAO,2BACAG,GADP,IAEIa,WAAW,YAAKZ,EAAOY,cAG/B,KAAKf,EACD,OAAO,2BACAE,GADP,IAEIc,gBAAiBb,EAAOa,kBAGhC,QACI,OAAOd,EAElB,E,uBClFKe,EAAeC,0BACbC,EAAaF,EAAbE,SAEFC,EAAgB,SAAC,GAA6B,EAA3BC,MAA4B,IDiFnBC,ECjFMC,EAAY,iBAChD,GDgF8BD,EChFc,CACxCjB,MAAO,GACPE,KAAM,GACND,UAAU,EACVS,WAAY,GACZC,gBAAiB,ID4EdQ,qBAAWvB,EAASqB,ICjF3B,mBAAOpB,EAAP,KAAcuB,EAAd,KAQA,OAAO,cAACN,EAAD,aAAUE,MAAO,CAACnB,EAAOuB,IAAeF,GAClD,EAEKG,EAAkB,WACpB,OAAOC,qBAAWV,EACrB,ECbM,SAASW,EAAWC,EAAWC,EAAQC,GAC1C,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAEzB,IACIC,EAAIC,EAAIC,EADNC,EAAUC,OAAOC,UAAUC,KAAK,WAAY,GAElDH,EAAQI,gBAAkB,SAAUC,GAChC,IAAMR,EAAKG,EAAQM,OACnBT,EAAGU,kBAAkB,QAAS,CAAEC,QAAS,QACzCX,EAAGU,kBAAkB,aAAc,CAAEC,QAAS,QAC9CX,EAAGU,kBAAkB,OAAQ,CAAEC,QAAS,OAC3C,EAEDR,EAAQS,QAAU,SAAUJ,GACxBK,QAAQC,IAAI,qBACf,EAEDX,EAAQY,UAAY,SAAUP,GAS1B,OARAR,EAAKG,EAAQM,OACbR,EAAKD,EAAGgB,YAAYtB,EAAW,aAC/BQ,EAAQD,EAAGgB,YAAYvB,GAEvBM,EAAGY,QAAU,SAAUJ,GACnBK,QAAQC,IAAI,QAASN,EACxB,EAEOb,GACJ,IAAK,MACDO,EAAMgB,IAAItB,GACVE,EAAQF,GACR,MACJ,IAAK,MACD,IAAMuB,EAAMjB,EAAMkB,SAClBD,EAAIJ,UAAY,WACZjB,EAAQqB,EAAIV,OACf,EACD,MACJ,IAAK,SACDP,EAAMmB,OAAOzB,EAAOrB,KACpB,MACJ,QACIsC,QAAQC,IAAI,mBAIpBb,EAAGqB,WAAa,WACZtB,EAAGuB,OACN,CACJ,CACJ,GACJ,C,sCCtDYC,EAAQC,YAAH,mMAiCLC,GAtBYD,YAAH,yVAsBEA,YAAH,qVAqBRE,EAAcF,YAAH,gNCuCTG,I,UAAAA,EAvFf,SAAcvD,GACZ,MAA0BkB,IAA1B,mBAAOxB,EAAP,KAAcuB,EAAd,KAGEuC,EAOExD,EAPFwD,MACAC,EAMEzD,EANFyD,KACAC,EAKE1D,EALF0D,YACAxD,EAIEF,EAJFE,IACAyD,EAGE3D,EAHF2D,MACAC,EAEE5D,EAFF4D,SACAC,EACE7D,EADF6D,WAGM9D,EAASL,EAATK,KAuBR,EAAsB+D,mBAASF,GAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KAEA,EAAqBC,YAAYX,GAA1BY,EAAP,oBACMC,EAAW,iDAAG,2FACfJ,IAAQH,EADO,gCAEVM,EAAW,CACfE,UAAW,CACTC,GAAInE,EACJ0D,SAAUG,EAAM,KALJ,OAQhBC,EAAOD,EAAM,GARG,2CAAH,qDAYjB,EAA0BD,mBAASD,GAAnC,mBAAOS,EAAP,KAAcC,EAAd,KAEMC,EAAa,iDAAG,2FACjBF,IAAUT,EADO,gCAEZK,EAAW,CACfE,UAAW,CACTC,GAAInE,EACJ2D,WAAYS,EAAQ,KALN,OAQlBC,EAASD,EAAQ,GARC,2CAAH,qDAYnB,OACE,sBAAKG,UAAU,eAAf,UACE,cAAC,IAAD,CAAMC,GAAE,iBAAYxE,GAApB,SACE,qBACEyE,IAAKlB,EACLmB,IAAG,kBAAapB,OAGpB,gCACE,+BAAKC,EAAL,KAAaE,KACb,mBAAGc,UAAU,OAAb,SAAqBf,IACrB,gCACI,wBAAQmB,QA9DA,WAChB,IAAMC,EAAa/E,EAAKgF,MAAK,SAACC,GAAD,OAAcA,EAAS9E,MAAQA,CAA/B,IACzB4E,GACF7D,EAAS,CACPrB,KAAMP,EACNa,IAAKA,EACLC,iBAAkB8E,SAASH,EAAW3E,kBAAoB,IAE5DiB,EAAW,OAAQ,MAAT,YAAC,eACN0D,GADK,IAER3E,iBAAkB8E,SAASH,EAAW3E,kBAAoB,OAG5Dc,EAAS,CACPrB,KAAMV,EACNc,KAAK,2BAAMA,GAAP,IAAaG,iBAAkB,MAErCiB,EAAW,OAAQ,MAAT,YAAC,eAAoBpB,GAArB,IAA2BG,iBAAkB,KAE1D,EA2CS,yBACA,oBAAGsE,UAAU,SAASI,QAASV,EAA/B,0BAAgDJ,KAChD,oBAAGU,UAAU,SAASI,QAASL,EAA/B,0BAAkDF,aAM7D,E,QC3FYY,EAAc9B,YAAH,2PAiBX+B,GAAiB/B,YAAH,4HAuBdgC,IAfkBhC,YAAH,gKAeIA,YAAH,uFAShBiC,GAAajC,YAAH,0QCiBRkC,OA5Df,WACE,MAA0BpE,IAA1B,mBAAOxB,EAAP,KAAcuB,EAAd,KAEQT,EAAoBd,EAApBc,gBAER,EAA0B+E,YAASL,GAA3BM,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KA+BjB,OA7BAC,qBAAU,WACJD,GACFxE,EAAS,CACPrB,KAAMX,EACNY,MAAO4F,EAAK5F,QAEd4F,EAAK5F,MAAM8F,SAAQ,SAAC3F,GAClBoB,EAAW,QAAS,MAAOpB,EAC5B,KACSwF,GACVpE,EAAW,QAAS,OAAOwE,MAAK,SAAC/F,GAC/BoB,EAAS,CACPrB,KAAMX,EACNY,MAAOA,GAEV,GAEJ,GAAE,CAAC4F,EAAMD,EAASvE,IAajB,qBAAKwD,UAAU,OAAf,SACG/E,EAAMG,MAAMS,OACX,qBAAKmE,UAAU,aAAf,UAZCjE,EAIEd,EAAMG,MAAMQ,QACjB,SAACL,GAAD,OAAUA,EAAK6F,SAAS3F,MAAQM,CAAhC,IAJOd,EAAMG,OAYMI,KAAI,SAACD,GAAD,OACjB,cAAC,EAAD,CAEEE,IAAKF,EAAKE,IACVsD,MAAOxD,EAAKwD,MACZC,KAAMzD,EAAKyD,KACXC,YAAa1D,EAAK0D,YAClBC,MAAO3D,EAAK2D,MACZC,SAAU5D,EAAK4D,SACfC,WAAY7D,EAAK6D,YAPZ7D,EAAKE,IAFK,MAcrB,mEAIP,E,MCLc4F,OAlDf,WACE,MAA0B5E,IAA1B,mBAAOxB,EAAP,KAAcuB,EAAd,KAEQV,EAAeb,EAAfa,WAER,EAAwCgF,YAASH,IAAzCI,EAAR,EAAQA,QAAeO,EAAvB,EAAiBN,KA4BjB,OA1BAC,qBAAU,WACJK,GACF9E,EAAS,CACPrB,KAAML,EACNgB,WAAYwF,EAAaxF,aAE3BwF,EAAaxF,WAAWoF,SAAQ,SAACE,GAC/BzE,EAAW,aAAc,MAAOyE,EACjC,KACSL,GACVpE,EAAW,aAAc,OAAOwE,MAAK,SAACrF,GACpCU,EAAS,CACPrB,KAAML,EACNgB,WAAYA,GAEf,GAEJ,GAAE,CAACwF,EAAcP,EAASvE,IAUzB,gCACI,+CACA,wBAAQ4D,QAAS,SAAC1C,GAAD,OAVFkC,EAUqBlC,EAAE6D,OAAOnF,WATjDI,EAAS,CACPrB,KAAMJ,EACNgB,gBAAiB6D,IAHD,IAACA,CAUE,EAAjB,SACC9D,EAAWN,KAAI,SAACD,GAAD,OACZ,wBAEAa,MAAOb,EAAKE,IAFZ,SAICF,EAAKyD,MAHDzD,EAAKE,IAFE,QAWvB,EC3Dc,OAA0B,wCCA1B,OAA0B,wCCsB1B+F,GAhBF,WACX,OACE,+BACI,0BAASxB,UAAU,UAAnB,UACI,0BAASA,UAAU,SAAnB,UACQ,uBAAOA,UAAU,eAAeyB,UAAQ,EAACC,OAAK,EAACvB,IAAKwB,GAAQC,MAAM,OAAOC,SAAS,OAAOC,KAAK,SAC9F,qBAAK9B,UAAU,cAAcG,IAAKpB,KAClC,qDAER,cAAC,GAAD,IACA,cAACgD,GAAD,QAIX,E,8BCwGcC,OAxHf,SAAgB1F,GA+BS2F,IAAMC,SAuF9B,ECjHcb,GANF,WACX,OACE,uCAAU,cAAC,GAAD,MAEb,ECkDcc,OAnDf,WACE,IACIC,EADIpB,EAASF,YAASF,IAAlBI,KAOR,OAJIA,IACFoB,EAAOpB,EAAKoB,MAIZ,mCACA,+BACI,yBAASpC,UAAU,UAAnB,SACF,gCACE,cAAC,IAAD,CAAMC,GAAG,IAAT,kCAECmC,EACC,qCACE,oDACqBA,EAAKC,UAD1B,IACsCD,EAAKE,YAE1CF,EAAKG,OAAO/G,KAAI,SAACgH,GAAD,OACf,sBAAqBxC,UAAU,OAA/B,UACE,6BACG,IAAIyC,KAAKjC,SAASgC,EAAME,eAAeC,uBAE1C,qBAAK3C,UAAU,WAAf,SACGwC,EAAMpH,MAAMI,KAAI,WAA8BoH,GAA9B,IAAGnH,EAAH,EAAGA,IAAYuD,GAAf,EAAQD,MAAR,EAAeC,MAAME,EAArB,EAAqBA,MAArB,OACf,gCACE,eAAC,IAAD,CAAMe,GAAE,iBAAYxE,GAApB,UACE,qBAAKyE,IAAKlB,IAGV,4BAAIA,OAEN,8BACE,qCAAQE,SARF0D,EADK,QALXJ,EAAM/G,IADD,OAuBjB,aAMX,E,6BCXc,O,4FAzCX,WACI,OAAOoH,KAAOC,KAAKC,WACtB,G,sBAED,WAEI,IAAMC,EAAQF,KAAKC,WACnB,QAASC,IAAUF,KAAKG,eAAeD,EAC1C,G,4BAED,SAAeA,GACX,IAEI,OADgBH,KAAOG,GACXE,IAAMT,KAAKU,MAAQ,GAKlC,CAFC,MAAOC,GACL,OAAO,CACV,CACJ,G,sBAED,WAEI,OAAOC,aAAaC,QAAQ,WAC/B,G,mBAED,SAAMC,GAEFF,aAAaG,QAAQ,WAAYD,GAEjCjG,OAAOmG,SAASC,OAAO,IAC1B,G,oBAED,WAEIL,aAAaM,WAAW,YAExBrG,OAAOmG,SAASC,OAAO,IAC1B,K,MCkCUE,OArEf,WACE,MAAkCvE,mBAAS,CAAEwE,MAAO,GAAIC,SAAU,KAAlE,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA2BxE,YAAYd,GAAvC,mBAAOuF,EAAP,KAAgBC,EAAhB,KAAgBA,MAEVC,EAAgB,iDAAG,WAAOC,GAAP,0FACvBA,EAAMC,iBADiB,kBAGUJ,EAAM,CACnCtE,UAAW,CAAEkE,MAAOE,EAAUF,MAAOC,SAAUC,EAAUD,YAJtC,OAGfQ,EAHe,OAMftB,EAAQsB,EAAiBtD,KAAKiD,MAAMjB,MAC1CuB,GAAKN,MAAMjB,GAPU,gDASrBjF,QAAQC,IAAR,MATqB,yDAAH,sDAahBwG,EAAe,SAACJ,GACpB,MAAwBA,EAAM7C,OAAtBvC,EAAR,EAAQA,KAAM5C,EAAd,EAAcA,MACd4H,EAAa,2BACRD,GADO,mBAET/E,EAAO5C,IAEX,EAED,OACE,+BACI,0BAAS4D,UAAU,UAAnB,UACA,cAAC,IAAD,CAAMC,GAAG,UAAT,iCACJ,sBAAKD,UAAU,aAAf,UAEE,uCAEA,uBAAMyE,SAAUN,EAAhB,UACE,gCACE,uBAAOO,QAAQ,QAAf,8BACA,uBACEC,YAAY,sBACZ3F,KAAK,QACL7D,KAAK,QACLyE,GAAG,QACHgF,SAAUJ,OAGd,gCACE,uBAAOE,QAAQ,MAAf,yBACA,uBACEC,YAAY,WACZ3F,KAAK,WACL7D,KAAK,WACLyE,GAAG,MACHgF,SAAUJ,OAGbN,EACC,8BACE,mBAAGlE,UAAU,aAAb,sDAEA,KACJ,8BACE,wBAAQA,UAAU,cAAc7E,KAAK,SAArC,gCAOT,ECkBc0J,OArFf,WACE,MAAkCxF,mBAAS,CAAEwE,MAAO,GAAIC,SAAU,KAAlE,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkBxE,YAAYZ,GAAvBkG,EAAP,oBAEMX,EAAgB,iDAAG,WAAOC,GAAP,0FACvBA,EAAMC,iBADiB,SAEQS,EAAQ,CACrCnF,UAAW,CACTkE,MAAOE,EAAUF,MACjBC,SAAUC,EAAUD,SACpBzB,UAAW0B,EAAU1B,UACrBC,SAAUyB,EAAUzB,YAPD,OAEjBgC,EAFiB,OAUjBtB,EAAQsB,EAAiBtD,KAAK8D,QAAQ9B,MAC5CuB,GAAKN,MAAMjB,GAXY,2CAAH,sDAchBwB,EAAe,SAACJ,GACpB,MAAwBA,EAAM7C,OAAtBvC,EAAR,EAAQA,KAAM5C,EAAd,EAAcA,MACd4H,EAAa,2BACRD,GADO,mBAET/E,EAAO5C,IAEX,EAED,OACF,+BACE,0BAAS4D,UAAU,UAAnB,UACA,cAAC,IAAD,CAAMA,UAAU,QAAQC,GAAG,SAA3B,gCACE,sBAAKD,UAAU,aAAf,UAEA,gDAEE,uBAAMyE,SAAUN,EAAhB,UACE,sBAAKnE,UAAU,8BAAf,UACE,uBAAO0E,QAAQ,YAAf,2BACA,uBACEC,YAAY,QACZ3F,KAAK,YACL7D,KAAK,YACLyE,GAAG,YACHgF,SAAUJ,OAGd,gCACE,uBAAOE,QAAQ,WAAf,0BACA,uBACEC,YAAY,OACZ3F,KAAK,WACL7D,KAAK,WACLyE,GAAG,WACHgF,SAAUJ,OAGd,gCACE,uBAAOE,QAAQ,QAAf,sBACA,uBACEC,YAAY,sBACZ3F,KAAK,QACL7D,KAAK,QACLyE,GAAG,QACHgF,SAAUJ,OAGd,gCACE,uBAAOE,QAAQ,MAAf,yBACA,uBACEC,YAAY,WACZ3F,KAAK,WACL7D,KAAK,WACLyE,GAAG,MACHgF,SAAUJ,OAGd,8BACE,wBAAQxE,UAAU,cAAc7E,KAAK,SAArC,gCAOT,E,mBCpBc4J,GAhEE,SAAC,GAAc,IAAZxJ,EAAW,EAAXA,KAEhB,EAAqBkB,IAAZD,EAAT,oBA+BA,OACI,sBAAKwD,UAAU,WAAf,UACI,8BACI,qBACIG,IAAG,kBAAa5E,EAAKwD,OACrBmB,IAAK3E,EAAKyD,SAGlB,gCACI,gCAAMzD,EAAKyD,KAAX,MAAoBzD,EAAK2D,SACzB,gCACI,wCACA,uBACI/D,KAAK,SACLwJ,YAAY,IACZvI,MAAOb,EAAKG,iBACZkJ,SApCH,SAAClH,GACd,IAAMtB,EAAQsB,EAAE6D,OAAOnF,MACT,MAAVA,GACAI,EAAS,CACLrB,KAAMR,EACNc,IAAKF,EAAKE,MAEdkB,EAAW,OAAQ,SAAT,eAAwBpB,MAGlCiB,EAAS,CACLrB,KAAMP,EACNa,IAAKF,EAAKE,IACVC,iBAAkB8E,SAASpE,KAE/BO,EAAW,OAAQ,MAAT,YAAC,eAAoBpB,GAArB,IAA2BG,iBAAkB8E,SAASpE,MAGvE,IAoBe,sBACI4I,KAAK,MACL,aAAW,QACX5E,QAAS,kBAlDN,SAAA7E,GACnBiB,EAAS,CACLrB,KAAMR,EACNc,IAAKF,EAAKE,MAEdkB,EAAW,OAAQ,SAAT,eAAwBpB,GAErC,CA2CkC0J,CAAe1J,EAArB,EAHb,wCAWnB,ECxDK2J,GAAgBC,aAAW,oCAsGlBC,GApGF,WACT,MAA0B3I,IAA1B,mBAAOxB,EAAP,KAAcuB,EAAd,KACA,EAAgC6I,aAAa3E,IAA7C,mBAAO4E,EAAP,KAAsBtE,EAAtB,KAAsBA,KAyBtB,SAASuE,IACL/I,EAAS,CAAErB,KAAMN,GACpB,CA0BD,OAjDAoG,qBAAU,WACFD,GACAkE,GAAc/D,MAAK,SAACqE,GAChBA,EAAIC,mBAAmB,CAAEC,UAAW1E,EAAK2E,SAASC,SACrD,GAER,GAAE,CAAC5E,IAIJC,qBAAU,WAAM,sDACZ,8GACuBtE,EAAW,OAAQ,OAD1C,OACUrB,EADV,OAEIkB,EAAS,CAAErB,KAAMT,EAAsBU,MAAM,YAAKE,KAFtD,4CADY,sBAMPL,EAAMK,KAAKO,QANH,WAAD,wBAORgK,EAEP,GAAE,CAAC5K,EAAMK,KAAKO,OAAQW,IA8BlBvB,EAAMI,SAWP,sBAAK2E,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAcI,QAASmF,EAAtC,qBAGA,+CACCtK,EAAMK,KAAKO,OACR,gCACKZ,EAAMK,KAAKE,KAAI,SAACD,GAAD,OACZ,cAAC,GAAD,CAAyBA,KAAMA,GAAhBA,EAAKE,IADR,IAIhB,sBAAKuE,UAAU,yBAAf,UACI,8CA/CpB,WACI,IAAI8F,EAAM,EAIV,OAHA7K,EAAMK,KAAK4F,SAAQ,SAAC3F,GAChBuK,GAAOvK,EAAK2D,MAAQ3D,EAAKG,gBAC5B,IACMoK,EAAIC,QAAQ,EACtB,CAyCoCC,MAGhBzB,GAAK0B,WACF,wBAAQ7F,QAzChC,WACI,IAAM8F,EAAa,GAEnBjL,EAAMK,KAAK4F,SAAQ,SAAC3F,GAChB,IAAK,IAAI4K,EAAI,EAAGA,EAAI5K,EAAKG,iBAAkByK,IACvCD,EAAWE,KAAK7K,EAAKE,IAE5B,IAED6J,EAAY,CACR3F,UAAW,CAAEvE,MAAO8K,IAE3B,EA6BuB,sBAEA,+DAKZ,+BACI,sBAAMlB,KAAK,MAAM,aAAW,UAA5B,0BADJ,qDAhCJ,qBAAKhF,UAAU,cAAcI,QAASmF,EAAtC,SACI,sBAAMvF,UAAU,QAAQgF,KAAK,MAAM,aAAW,QAA9C,2BAwCf,ECrDcqB,OAtDf,WAoCE,OACE,iCACI,0BAASrG,UAAU,UAAnB,UACI,eAAC,IAAD,CAASC,GAAG,IAAZ,UACI,qBACEC,IAAI,OACJC,IAAG,aAEL,wCAAU,8CAEd,8BA1CJoE,GAAK0B,WAEL,iCACI,cAAC,IAAD,CAASjG,UAAU,QAAQC,GAAG,WAA9B,qBAKA,mBAAGD,UAAU,QAAQsG,KAAK,IAAIlG,QAAS,kBAAMmE,GAAKgC,QAAX,EAAvC,oBAIA,cAAC,GAAD,OAKN,iCACM,cAAC,IAAD,CAASvG,UAAU,QAAQC,GAAG,UAA9B,oBAIA,cAAC,IAAD,CAASD,UAAU,QAAQC,GAAG,SAA9B,mBAIA,cAAC,GAAD,aAsBX,EClCcuG,OAlBf,SAAgBlK,GACd,OAGI,aADF,CACE,mBACI,0BAASmK,MAAM,UAAf,mBACU,IAAIhE,MAAOiE,cADrB,iDACqF,mBAAG1G,UAAU,QAAQsG,KAAK,oCAAoC/E,OAAO,QAArE,qBADrF,KAEQ,mBAAGvB,UAAU,QAAQsG,KAAK,+BAA+B/E,OAAO,QAAhE,mBAFR,KAE2F,mBAAGvB,UAAU,QAAQsG,KAAK,gCACjH/E,OAAO,QADgF,wBASpG,ECgGcoF,OArGf,WACE,MAA0BlK,IAA1B,mBAAOxB,EAAP,KAAcuB,EAAd,KACQoD,EAAOgH,cAAPhH,GAER,EAAsCP,mBAAS,CAAC,GAAhD,mBAAOwH,EAAP,KAAoBC,EAApB,KAEA,EAA0BhG,YAASL,GAA3BM,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAET5F,EAAgBH,EAAhBG,MAAOE,EAASL,EAATK,KA2Df,OAzDA2F,qBAAU,WAEJ7F,EAAMS,OACRiL,EAAe1L,EAAMkF,MAAK,SAAC/E,GAAD,OAAUA,EAAKE,MAAQmE,CAAvB,KAGnBoB,GACPxE,EAAS,CACPrB,KAAMX,EACNY,MAAO4F,EAAK5F,QAGd4F,EAAK5F,MAAM8F,SAAQ,SAAC3F,GAClBoB,EAAW,QAAS,MAAOpB,EAC5B,KAGOwF,GACRpE,EAAW,QAAS,OAAOwE,MAAK,SAAC4F,GAC/BvK,EAAS,CACPrB,KAAMX,EACNY,MAAO2L,GAEV,GAEJ,GAAE,CAAC3L,EAAO4F,EAAMD,EAASvE,EAAUoD,IAiClC,mCACE,+BACE,0BAASI,UAAU,UAAnB,UACA,cAAC,IAAD,CAAMA,UAAU,QAAQC,GAAG,IAA3B,qCACD4G,GAAevL,EACd,sBAAK0E,UAAU,kBAAf,UAEE,qBACEE,IAAK2G,EAAY7H,KAChBmB,IAAG,kBAAa0G,EAAY9H,SAE/B,uCAAQ8H,EAAY7H,KAApB,eAAgC6H,EAAY3H,SAE5C,4BAAI2H,EAAY5H,cAEhB,8BACE,wBAAQe,UAAU,gBAAgBI,QA/C1B,WAChB,IAAMC,EAAa/E,EAAKgF,MAAK,SAACC,GAAD,OAAcA,EAAS9E,MAAQmE,CAA/B,IACzBS,GACF7D,EAAS,CACPrB,KAAMP,EACNa,IAAKmE,EACLlE,iBAAkB8E,SAASH,EAAW3E,kBAAoB,IAE5DiB,EAAW,OAAQ,MAAT,YAAC,eACN0D,GADK,IAER3E,iBAAkB8E,SAASH,EAAW3E,kBAAoB,OAG5Dc,EAAS,CACPrB,KAAMV,EACNc,KAAK,2BAAMsL,GAAP,IAAoBnL,iBAAkB,MAE5CiB,EAAW,OAAQ,MAAT,YAAC,eAAoBkK,GAArB,IAAkCnL,iBAAkB,KAEjE,EA4BS,yBACA,wBACEsE,UAAU,gBACVgH,UAAW1L,EAAKgF,MAAK,SAAC2G,GAAD,OAAOA,EAAExL,MAAQoL,EAAYpL,GAA7B,IACrB2E,QA9BW,WACrB5D,EAAS,CACPrB,KAAMR,EACNc,IAAKoL,EAAYpL,MAGnBkB,EAAW,OAAQ,SAAT,eAAwBkK,GACnC,EAoBS,oCASF,WAKT,EC9FKK,GAAWC,YAAe,CAC9BC,IAAK,aAGDC,GAAWC,aAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QAC1BxE,EAAQK,aAAaC,QAAQ,YACnC,MAAO,CACLkE,QAAQ,2BACHA,GADE,IAELC,cAAezE,EAAK,iBAAaA,GAAU,KAGhD,IAEK0E,GAAS,IAAIC,IAAa,CAC9BC,KAAMP,GAASQ,OAAOX,IACtBY,MAAO,IAAIC,MA4CEC,OAzCf,WACE,OACE,cAACC,EAAA,EAAD,CAAgBP,OAAQA,GAAxB,SACA,cAAC,IAAD,UACE,8BACE,eAAC,EAAD,WACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEQ,KAAK,IACLC,QAAS,cAAC,GAAD,MAEX,cAAC,IAAD,CACED,KAAK,QACLC,QAAS,cAAC,GAAD,MAEX,cAAC,IAAD,CACED,KAAK,WACLC,QAAS,cAAC,GAAD,MAEX,cAAC,IAAD,CACED,KAAK,SACLC,QAAS,cAAC,GAAD,MAEX,cAAC,IAAD,CACED,KAAK,UACLC,QAAS,cAAC,GAAD,MAEX,cAAC,IAAD,CACED,KAAK,aACLC,QAAS,cAACC,GAAD,SAGb,cAAC,GAAD,YAMT,ECzEDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,Q","file":"static/js/main.8294af49.chunk.js","sourcesContent":["export const UPDATE_ITEMS = \"UPDATE_ITEMS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n\n","import { useReducer } from \"react\";\nimport {\n    UPDATE_ITEMS,\n    ADD_TO_CART,\n    UPDATE_CART_QUANTITY,\n    REMOVE_FROM_CART,\n    ADD_MULTIPLE_TO_CART,\n    UPDATE_CATEGORIES,\n    UPDATE_CURRENT_CATEGORY,\n    CLEAR_CART,\n    TOGGLE_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n    switch (action.type) {\n        case UPDATE_ITEMS:\n            return {\n                ...state,\n                items: [...action.items],\n            };\n\n        case ADD_TO_CART:\n            return {\n                ...state,\n                cartOpen: true,\n                cart: [...state.cart, action.item],\n            };\n\n        case ADD_MULTIPLE_TO_CART:\n            return {\n                ...state,\n                cart: [...state.cart, ...action.items],\n            };\n\n        case UPDATE_CART_QUANTITY:\n            return {\n                ...state,\n                cartOpen: true,\n                cart: state.cart.map(item => {\n                    if (action._id === item._id) {\n                        item.purchaseQuantity = action.purchaseQuantity\n                    }\n                    return item\n                })\n            };\n\n        case REMOVE_FROM_CART:\n            let newState = state.cart.filter(item => {\n                return item._id !== action._id;\n            });\n\n            return {\n                ...state,\n                cartOpen: newState.length > 0,\n                cart: newState\n            };\n\n        case CLEAR_CART:\n            return {\n                ...state,\n                cartOpen: false,\n                cart: []\n            };\n\n        case TOGGLE_CART:\n            return {\n                ...state,\n                cartOpen: !state.cartOpen\n            };\n\n        case UPDATE_CATEGORIES:\n            return {\n                ...state,\n                categories: [...action.categories],\n            };\n\n        case UPDATE_CURRENT_CATEGORY:\n            return {\n                ...state,\n                currentCategory: action.currentCategory\n            }\n\n        default:\n            return state;\n    }\n};\n\nexport function useProductReducer(initialState) {\n    return useReducer(reducer, initialState)\n}\n\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n    const [state, dispatch] = useProductReducer({\n        items: [],\n        cart: [],\n        cartOpen: false,\n        categories: [],\n        currentCategory: '',\n    });\n\n    return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n    return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };","export function pluralize(name, count) {\n    if (count === 1) {\n        return name;\n    }\n    return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n    return new Promise((resolve, reject) => {\n        //open name not sure whether it is menu-app\n        const request = window.indexedDB.open('menu-app', 1);\n        let db, tx, store;\n        request.onupgradeneeded = function (e) {\n            const db = request.result;\n            db.createObjectStore('items', { keyPath: '_id' });\n            db.createObjectStore('categories', { keyPath: '_id' });\n            db.createObjectStore('cart', { keyPath: '_id' });\n        };\n\n        request.onerror = function (e) {\n            console.log('There was an error');\n        };\n\n        request.onsuccess = function (e) {\n            db = request.result;\n            tx = db.transaction(storeName, 'readwrite');\n            store = tx.objectStore(storeName);\n\n            db.onerror = function (e) {\n                console.log('error', e);\n            };\n\n            switch (method) {\n                case 'put':\n                    store.put(object);\n                    resolve(object);\n                    break;\n                case 'get':\n                    const all = store.getAll();\n                    all.onsuccess = function () {\n                        resolve(all.result);\n                    };\n                    break;\n                case 'delete':\n                    store.delete(object._id);\n                    break;\n                default:\n                    console.log('No valid method');\n                    break;\n            }\n\n            tx.oncomplete = function () {\n                db.close();\n            };\n        };\n    });\n}\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($items: [ID]!) {\n    addOrder(items: $items) {\n      purchaseDate\n      items {\n        _id\n        name\n        description\n        price\n      \n        category {\n          name\n        }\n        rating{\n            thumbsUp\n            thumbsDown\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }  \n`;\n\nexport const UPDATE_ITEM = gql`\nmutation updateItem($thumbsUp: Float, $thumbsDown: Float, $id: ID) {\n  updateItem(thumbsUp: $thumbsUp, thumbsDown: $thumbsDown, _id: $id) {\n    thumbsUp\n    thumbsDown\n  }\n}\n`;","import { Link } from \"react-router-dom\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { useMutation } from '@apollo/client';\nimport { UPDATE_ITEM } from '../../utils/mutations';\nimport React, { useState } from 'react';\n\nfunction Item(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    description,\n    _id,\n    price,\n    thumbsUp,\n    thumbsDown,\n  } = item;\n\n  const { cart } = state\n  \n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        item: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n  \n  const [tUp, setTUP] = useState(thumbsUp);\n  \n  const [updateItem] = useMutation(UPDATE_ITEM);\n  const addThumbsUp = async () => {\n    if(tUp === thumbsUp) {\n      await updateItem({\n        variables: {\n          id: _id,\n          thumbsUp: tUp + 1,\n        },\n      });\n      setTUP(tUp + 1)\n    }\n  }\n  \n  const [tDown, setTDown] = useState(thumbsDown);\n\n  const addThumbsDown = async () => {\n    if(tDown === thumbsDown) {\n      await updateItem({\n        variables: {\n          id: _id,\n          thumbsDown: tDown + 1,\n        },\n      });\n      setTDown(tDown + 1)\n    }\n  }\n\n  return (\n    <div className=\"item_card_TD\">\n      <Link to={`/items/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />        \n      </Link>\n      <div>\n        <h3>{name} ${price}</h3>\n        <p className=\"desc\">{description}</p>\n        <div>\n            <button onClick={addToCart}>Add to cart</button>\n            <p className=\"thumbs\" onClick={addThumbsUp}>👍 {tUp}</p>\n            <p className=\"thumbs\" onClick={addThumbsDown}>👎 {tDown}</p>\n        </div>\n      </div>\n    </div>\n  );\n\n}\n\nexport default Item;","import { gql } from '@apollo/client';\n\nexport const QUERY_ITEMS = gql`\n  query getItems($category: ID) {\n    items(category: $category) {\n      _id\n      name\n      description\n      price\n      image\n      category {\n        _id\n      }\n      thumbsUp\n      thumbsDown\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($items: [ID]!) {\n    checkout(items: $items) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_ITEMS = gql`\n  {\n    items {\n      _id\n      name\n      description\n      price\n    \n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        items {\n          _id\n          name\n          description\n          price\n          image\n        }\n      }\n    }\n  }\n`;\n","import React, { useEffect } from 'react';\nimport Item from '../Item';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_ITEMS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_ITEMS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_ITEMS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_ITEMS,\n        items: data.items,\n      });\n      data.items.forEach((item) => {\n        idbPromise('items', 'put', item);\n      });\n    } else if (!loading) {\n      idbPromise('items', 'get').then((items) => {\n        dispatch({\n          type: UPDATE_ITEMS,\n          items: items,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterItems() {\n    if (!currentCategory) {\n      return state.items;\n    }\n\n    return state.items.filter(\n      (item) => item.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      {state.items.length ? (\n        <div className=\"top_ranked\">\n          {filterItems().map((item) => (\n            <Item\n              key={item._id}\n              _id={item._id}\n              image={item.image}\n              name={item.name}\n              description={item.description}\n              price={item.price}\n              thumbsUp={item.thumbsUp}\n              thumbsDown={item.thumbsDown}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any items yet!</h3>\n      )}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport HTMLFlipBook from \"react-pageflip\";\n\nfunction Menu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n        <h2>Choose a Menu</h2>\n        <select onClick={(e) => handleClick(e.target.value)}>\n        {categories.map((item) => (\n            <option\n            key={item._id}\n            value={item._id}\n            >\n            {item.name}\n            </option>\n            ))}\n        </select>\n    </div>\n  );\n}\n\nexport default Menu;\n","export default __webpack_public_path__ + \"static/media/intro_video.9931c02d.mp4\";","export default __webpack_public_path__ + \"static/media/banner_logo.0dc580d8.png\";","import React from \"react\";\nimport ItemList from \"../components/ItemList\";\nimport Menu from \"../components/Menu\";\nimport video1 from \"../intro_video.mp4\";\nimport image from \"../banner_logo.png\";\n\nconst Home = () => {\n  return (\n    <main>\n        <section className=\"content\">\n            <section className=\"banner\">             \n                    <video className=\"banner_video\" autoPlay muted src={video1} width=\"100%\" autoplay=\"true\" loop=\"true\" />                     \n                    <img className=\"banner_logo\" src={image} />\n                    <h1>What time is it?</h1>\n            </section>\n            <Menu />\n            <ItemList />      \n        </section>\n    </main>\n  );\n};\n\nexport default Home;","import React, { useEffect } from 'react';\r\nimport HTMLFlipBook from \"react-pageflip\";\r\nimport Menu from '../Menu/index';\r\n\r\nfunction MyBook(props) {\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\nconst PageCover = React.forwardRef((props, ref) => {\r\n    return (\r\n      <div className=\"page page-cover\" ref={ref} data-density=\"hard\">\r\n        <div className=\"page-content\">\r\n          <h2>{props.children}</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n  \r\n  const Page = React.forwardRef((props, ref) => {\r\n    return (\r\n      <div className=\"page\" ref={ref}>\r\n        <div className=\"page-content\">\r\n          <h2 className=\"page-header\">Page header - {props.number}</h2>\r\n          <div className=\"page-image\"></div>\r\n          <div className=\"page-text\">{props.children}</div>\r\n          <div className=\"page-footer\">{props.number + 1}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n  \r\n  class DemoBook extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        page: 0,\r\n        totalPage: 0,\r\n      };\r\n    }\r\n  \r\n    nextButtonClick = () => {\r\n      this.flipBook.getPageFlip().flipNext();\r\n    };\r\n  \r\n    prevButtonClick = () => {\r\n      this.flipBook.getPageFlip().flipPrev();\r\n    };\r\n  \r\n    onPage = (e) => {\r\n      this.setState({\r\n        page: e.data,\r\n      });\r\n    };\r\n  \r\n    componentDidMount() {\r\n      this.setState({\r\n        totalPage: this.flipBook.getPageFlip().getPageCount(),\r\n      });\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <HTMLFlipBook\r\n            width={550}\r\n            height={733}\r\n            size=\"stretch\"\r\n            minWidth={315}\r\n            maxWidth={1000}\r\n            minHeight={400}\r\n            maxHeight={1533}\r\n            maxShadowOpacity={0.5}\r\n            showCover={true}\r\n            mobileScrollSupport={true}\r\n            onFlip={this.onPage}\r\n            onChangeOrientation={this.onChangeOrientation}\r\n            onChangeState={this.onChangeState}\r\n            className=\"demo-book\"\r\n            ref={(el) => (this.flipBook = el)}\r\n          >\r\n\r\n            <PageCover>BOOK TITLE</PageCover>\r\n            <Page number={1}>Lorem ipsum...</Page>\r\n            <Page number={2}>Lorem ipsum...</Page>\r\n            /*...*/\r\n            <PageCover>THE END</PageCover>\r\n\r\n          </HTMLFlipBook>\r\n  \r\n          <div className=\"container\">\r\n            <div>\r\n\r\n              <button type=\"button\" onClick={this.prevButtonClick}>\r\n                Previous page\r\n              </button>\r\n\r\n              [<span>{this.state.page}</span> of\r\n               <span>{this.state.totalPage}</span>]\r\n\r\n              <button type=\"button\" onClick={this.nextButtonClick}>\r\n                Next page\r\n              </button>\r\n\r\n            </div>\r\n            <div>\r\n\r\n              State: <i>{this.state.state}</i>, orientation: <i>{this.state.orientation}</i>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport default MyBook;\r\n","import React from 'react'\r\nimport MyBook from '../components/myBook/myBook'\r\n\r\nconst Menu = () => {\r\n  return (\r\n    <div >Menu<MyBook /></div>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction Profile() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n    <main>\n        <section className=\"content\">\n      <div>\n        <Link to=\"/\">← Back to Items</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.items.map(({ _id, image, name, price }, index) => (\n                    <div key={index}>\n                      <Link to={`/items/${_id}`}>\n                        <img alt={name} \n                        // src={`/images/${image}`} \n                        />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n      </section>\n    </main>\n    </>\n  );\n}\n\nexport default Profile;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n    getProfile() {\n        return decode(this.getToken());\n    }\n\n    loggedIn() {\n        // Checks if there is a saved token and it's still valid\n        const token = this.getToken();\n        return !!token && !this.isTokenExpired(token);\n    }\n\n    isTokenExpired(token) {\n        try {\n            const decoded = decode(token);\n            if (decoded.exp < Date.now() / 1000) {\n                return true;\n            } else return false;\n        } catch (err) {\n            return false;\n        }\n    }\n\n    getToken() {\n        // Retrieves the user token from localStorage\n        return localStorage.getItem('id_token');\n    }\n\n    login(idToken) {\n        // Saves user token to localStorage\n        localStorage.setItem('id_token', idToken);\n\n        window.location.assign('/');\n    }\n\n    logout() {\n        // Clear user token and profile data from localStorage\n        localStorage.removeItem('id_token');\n        // this will reload the page and reset the state of the application\n        window.location.assign('/');\n    }\n}\n\nexport default new AuthService();","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login() {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <main>\n        <section className=\"content\">                \n        <Link to=\"/signup\">← Go to Signup</Link>\n    <div className=\"form_style\">\n      \n      <h1>Login</h1>\n      \n      <form onSubmit={handleFormSubmit}>\n        <div>\n          <label htmlFor=\"email\">Email address : </label>\n          <input\n            placeholder=\"youremail@email.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"pwd\">Password : </label>\n          <input\n            placeholder=\"********\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div>\n          <button className=\"form_submit\" type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n    </section>\n</main>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup() {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n<main>\n  <section className=\"content\">\n  <Link className=\"links\" to=\"/login\">← Go to Login</Link>\n    <div className=\"form_style\">\n      \n    <h1>Please sign up</h1>\n    \n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name : </label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"lastName\">Last Name : </label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"email\">Email : </label>\n          <input\n            placeholder=\"youremail@email.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"pwd\">Password : </label>\n          <input\n            placeholder=\"********\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div>\n          <button className=\"form_submit\" type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n    </section>\n</main>\n  );\n}\n\nexport default Signup;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n    const [, dispatch] = useStoreContext();\n\n    const removeFromCart = item => {\n        dispatch({\n            type: REMOVE_FROM_CART,\n            _id: item._id\n        });\n        idbPromise('cart', 'delete', { ...item });\n\n    };\n\n    const onChange = (e) => {\n        const value = e.target.value;\n        if (value === '0') {\n            dispatch({\n                type: REMOVE_FROM_CART,\n                _id: item._id\n            });\n            idbPromise('cart', 'delete', { ...item });\n\n        } else {\n            dispatch({\n                type: UPDATE_CART_QUANTITY,\n                _id: item._id,\n                purchaseQuantity: parseInt(value)\n            });\n            idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n        }\n    }\n\n    return (\n        <div className=\"flex-row\">\n            <div>\n                <img\n                    src={`/images/${item.image}`}\n                    alt={item.name}\n                />\n            </div>\n            <div>\n                <div>{item.name}, ${item.price}</div>\n                <div>\n                    <span>Qty:</span>\n                    <input\n                        type=\"number\"\n                        placeholder=\"1\"\n                        value={item.purchaseQuantity}\n                        onChange={onChange}\n                    />\n                    <span\n                        role=\"img\"\n                        aria-label=\"trash\"\n                        onClick={() => removeFromCart(item)}\n                    >\n                        🗑️\n                    </span>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CartItem;\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\n\n// stripePromise returns a promise with the stripe object as soon as the Stripe package loads\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n    const [state, dispatch] = useStoreContext();\n    const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n    // We check to see if there is a data object that exists, if so this means that a checkout session was returned from the backend\n    // Then we should redirect to the checkout with a reference to our session id\n    useEffect(() => {\n        if (data) {\n            stripePromise.then((res) => {\n                res.redirectToCheckout({ sessionId: data.checkout.session });\n            });\n        }\n    }, [data]);\n\n    // If the cart's length or if the dispatch function is updated, check to see if the cart is empty.\n    // If so, invoke the getCart method and populate the cart with the existing from the session\n    useEffect(() => {\n        async function getCart() {\n            const cart = await idbPromise('cart', 'get');\n            dispatch({ type: ADD_MULTIPLE_TO_CART, items: [...cart] });\n        }\n\n        if (!state.cart.length) {\n            getCart();\n        }\n    }, [state.cart.length, dispatch]);\n\n    function toggleCart() {\n        dispatch({ type: TOGGLE_CART });\n    }\n\n    function calculateTotal() {\n        let sum = 0;\n        state.cart.forEach((item) => {\n            sum += item.price * item.purchaseQuantity;\n        });\n        return sum.toFixed(2);\n    }\n\n    // When the submit checkout method is invoked, loop through each item in the cart\n    // Add each item id to the productIds array and then invoke the getCheckout query passing an object containing the id for all our items\n    function submitCheckout() {\n        const productIds = [];\n\n        state.cart.forEach((item) => {\n            for (let i = 0; i < item.purchaseQuantity; i++) {\n                productIds.push(item._id);\n            }\n        });\n\n        getCheckout({\n            variables: { items: productIds },\n        });\n    }\n\n    if (!state.cartOpen) {\n        return (\n            <div className=\"cart-closed\" onClick={toggleCart}>\n                <span className=\"links\" role=\"img\" aria-label=\"trash\">\n                    🛒\n                </span>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"cart\">\n            <div className=\"close links\" onClick={toggleCart}>\n                [close]\n            </div>\n            <h2>Shopping Cart</h2>\n            {state.cart.length ? (\n                <div>\n                    {state.cart.map((item) => (\n                        <CartItem key={item._id} item={item} />\n                    ))}\n\n                    <div className=\"flex-row space-between\">\n                        <strong>Total: ${calculateTotal()}</strong>\n\n                        {/* Check to see if the user is logged in. If so render a button to check out */}\n                        {Auth.loggedIn() ? (\n                            <button onClick={submitCheckout}>Checkout</button>\n                        ) : (\n                            <span>(log in to check out)</span>\n                        )}\n                    </div>\n                </div>\n            ) : (\n                <h3>\n                    <span role=\"img\" aria-label=\"shocked\">\n                        😱\n                    </span>\n                    You haven't added anything to your cart yet!\n                </h3>\n            )}\n        </div>\n    );\n};\n\nexport default Cart;\n","import Auth from \"../../utils/auth\";\nimport { NavLink } from \"react-router-dom\";\nimport Cart from \"../Cart\";\n\nfunction Nav() {\n  function showNavigation() {\n\n\n    if (Auth.loggedIn()) {\n      return (\n        <span>\n            <NavLink className=\"links\" to=\"/Profile\">\n              Profile\n            </NavLink>\n          \n            {/* this is not using the NavLink component to logout or user and then refresh the application to the start */}\n            <a className=\"links\" href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          \n            <Cart />\n        </span>  \n      );\n    } else {\n      return (\n      <span>\n            <NavLink className=\"links\" to=\"/signup\">\n              Signup\n            </NavLink>\n         \n            <NavLink className=\"links\" to=\"/login\">\n              Login\n            </NavLink>\n         \n            <Cart />\n      </span>\n      );\n    }\n  }\n\n  return (\n    <header>\n        <section className=\"content\">\n            <NavLink to=\"/\">\n                <img\n                  alt=\"home\"\n                  src={`logo.png`}\n                />\n                <h1>Hungry<span>Time</span></h1>\n            </NavLink>\n            <nav>\n              {showNavigation()}\n            </nav>\n        </section>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\n// import { Card } from 'react-bootstrap';\n\n\nfunction Footer(props) {\n  return (\n\n    // <Card className=\"text-center\">\n      <footer>\n          <section class=\"content\">\n            &copy; {new Date().getFullYear()} All Rights Reserved. Designed &amp; developed by <a className=\"links\" href=\"https://github.com/abdallajama201\" target=\"blank\">Abdalla\n            </a>, <a className=\"links\" href=\"https://github.com/JamesF905\" target=\"blank\">James</a>, <a className=\"links\" href=\"https://github.com/Wingky1208\"\n              target=\"blank\">Wingky</a>\n\n          </section>\n      </footer>\n\n    // </Card>\n\n  )\n}\n\nexport default Footer;","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_ITEMS,\n} from '../utils/actions';\nimport { QUERY_ITEMS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentItem, setCurrentItem] = useState({});\n\n  const { loading, data } = useQuery(QUERY_ITEMS);\n\n  const { items, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (items.length) {\n      setCurrentItem(items.find((item) => item._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_ITEMS,\n        items: data.items,\n      });\n\n      data.items.forEach((item) => {\n        idbPromise('items', 'put', item);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('items', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_ITEMS,\n          items: indexedProducts,\n        });\n      });\n    }\n  }, [items, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        item: { ...currentItem, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentItem, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentItem._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentItem });\n  };\n\n  return (\n    <>\n      <main>\n        <section className=\"content\">\n        <Link className=\"links\" to=\"/\">← Back to the Menu</Link>\n      {currentItem && cart ? (\n        <div className=\"items_container\">\n          \n          <img\n            alt={currentItem.name}\n             src={`/images/${currentItem.image}`}\n        />\n          <h2>{`${currentItem.name} - \\$${currentItem.price}`}</h2> \n\n          <p>{currentItem.description}</p>\n\n          <p>\n            <button className=\"items_buttons\" onClick={addToCart}>Add to Cart</button>\n            <button\n              className=\"items_buttons\"\n              disabled={!cart.find((p) => p._id === currentItem._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n        </div>\n      ) : null}\n    </section>\n</main>\n    </>\n  );\n}\n\nexport default Detail;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Menu from './pages/Menu';\nimport Profile from './pages/Profile';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav'\nimport Footer from './components/Footer'\nimport ItemDetails from './pages/ItemDetails'\nimport { StoreProvider } from './utils/GlobalState';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n    <Router>\n      <div>\n        <StoreProvider>\n          <Nav />\n          <Routes>\n            <Route \n              path=\"/\" \n              element={<Home />} \n            />\n            <Route \n              path=\"/menu\" \n              element={<Menu />} \n            />\n            <Route \n              path=\"/profile\" \n              element={<Profile />} \n            />\n            <Route \n              path=\"/login\" \n              element={<Login />} \n            />\n            <Route \n              path=\"/signup\" \n              element={<Signup />} \n            />\n            <Route \n              path=\"/items/:id\" \n              element={<ItemDetails />} \n            />\n          </Routes>\n          <Footer />\n        </StoreProvider>\n      </div>\n    </Router>\n  </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}